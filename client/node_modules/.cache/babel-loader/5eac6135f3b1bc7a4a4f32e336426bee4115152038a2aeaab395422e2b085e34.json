{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GAYATRI\\\\Desktop\\\\project\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { auth } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password, role) => {\n    try {\n      const {\n        data\n      } = await auth.login({\n        email,\n        password,\n        role\n      });\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      toast.success('Login successful');\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const signup = async (email, password, role) => {\n    try {\n      const {\n        data\n      } = await auth.signup({\n        email,\n        password,\n        role\n      });\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      toast.success('Signup successful');\n      return data;\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    toast.success('Logged out successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","auth","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","role","data","localStorage","setItem","token","success","error","console","signup","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/GAYATRI/Desktop/project/client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { auth } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      const { data } = await auth.login({ email, password, role });\r\n      setUser(data.user);\r\n      localStorage.setItem('token', data.token);\r\n      toast.success('Login successful');\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signup = async (email, password, role) => {\r\n    try {\r\n      const { data } = await auth.signup({ email, password, role });\r\n      setUser(data.user);\r\n      localStorage.setItem('token', data.token);\r\n      toast.success('Signup successful');\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, signup, logout, isAuthenticated: !!user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAC7C,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMd,IAAI,CAACU,KAAK,CAAC;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAK,CAAC,CAAC;MAC5DJ,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;MAClBO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;MACzChB,KAAK,CAACiB,OAAO,CAAC,kBAAkB,CAAC;MACjC,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,MAAM,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAC9C,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMd,IAAI,CAACqB,MAAM,CAAC;QAAEV,KAAK;QAAEC,QAAQ;QAAEC;MAAK,CAAC,CAAC;MAC7DJ,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;MAClBO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;MACzChB,KAAK,CAACiB,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbM,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCtB,KAAK,CAACiB,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,KAAK;MAAEW,MAAM;MAAEC,MAAM;MAAEI,eAAe,EAAE,CAAC,CAAClB;IAAK,CAAE;IAAAF,QAAA,EACnFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAxCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA0CzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGpC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAAC8B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}